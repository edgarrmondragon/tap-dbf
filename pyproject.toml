[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core==1.6",
  "poetry-dynamic-versioning",
]

[tool.poetry]
name = "tap-dbf"
version = "0.1.0"
description = "Singer tap for .DBF files"
authors = ["Edgar R. Mondrag√≥n <edgarrm358@gmail.com>"]
keywords = [
  "ELT",
  "singer.io",
  "dbf",
  "dBase",
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/edgarrmondragon/tap-pulumi-cloud"
repository = "https://github.com/edgarrmondragon/tap-pulumi-cloud"
documentation = "https://github.com/edgarrmondragon/tap-pulumi-cloud#readme"
classifiers = [
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Database",
]

[tool.poetry.dependencies]
python = ">=3.7.1,<3.12"
singer-sdk = "==0.31.0"
dbfread = "==2.0.7"
fs = "==2.4.16"
fs-s3fs = {version = "==1.1.1", optional = true}

[tool.poetry.group.dev.dependencies]
singer-sdk = {version = "*", extras = ["testing"]}
pytest-github-actions-annotate-failures = "^0.2.0"

[tool.poetry.scripts]
tap-dbf = 'tap_dbf.tap:cli'

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.black]
line-length = 88

[tool.ruff]
ignore = ["ANN101", "DJ", "PD"]
select = ["ALL"]
src = ["tap_dbf", "tests"]
target-version = "py37"
unfixable = [
  "ERA001",  # commented-out-code
]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
known-first-party = ["tap_dbf"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/*" = ["ANN201"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"
