[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs==0.4",
  "hatchling==1.27",
]

[project]
name = "tap-dbf"
description = "Singer tap for DBF files"
readme = "README.md"
keywords = [
  "dBase",
  "dbf",
  "ELT",
  "singer.io",
]
license = "Apache-2.0"
license-files = [ "LICENSE" ]
maintainers = [
  { name = "Edgar R. Mondragón", email = "edgarrm358@gmail.com" },
]
authors = [
  { name = "Edgar R. Mondragón", email = "edgarrm358@gmail.com" },
]
requires-python = ">=3.9"
classifiers = [
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Database",
]
dynamic = [
  "version",
]
dependencies = [
  "dbfread~=2.0.7",
  "fsspec~=2025.3.0",
  "singer-sdk~=0.46.0",
]
optional-dependencies.all = [
  "tap-dbf[gcs,s3]",
]
optional-dependencies.gcs = [
  "gcsfs~=2025.3.0",
]
optional-dependencies.s3 = [
  "s3fs~=2025.3.0",
]
urls.Documentation = "https://github.com/edgarrmondragon/tap-dbf#readme"
urls.Homepage = "https://github.com/edgarrmondragon/tap-dbf"
urls.Repository = "https://github.com/edgarrmondragon/tap-dbf"
scripts."tap-dbf" = "tap_dbf.tap:TapDBF.cli"

[dependency-groups]
dev = [
  { include-group = "testing" },
  { include-group = "typing" },
]
testing = [
  "deptry>=0.12",
  "pytest>=7.4",
  "pytest-github-actions-annotate-failures~=0.3.0",
  "singer-sdk[testing]",
]
typing = [
  "mypy",
  "typing-extensions>=4.7.1; python_version<'3.11'",
]

[tool.hatch.version]
source = "vcs"

[tool.ruff]
src = [
  "tap_dbf",
  "tests",
]
lint.select = [
  "ALL",
]
lint.ignore = [
  "COM812",
  "CPY",
  "DJ",
  "ISC001",
  "PD",
]
lint.per-file-ignores."tests/*" = [
  "ANN201",
]
lint.unfixable = [
  "ERA001", # commented-out-code
]
lint.flake8-annotations.allow-star-arg-any = true
lint.isort.known-first-party = [
  "tap_dbf",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"
lint.preview = true

[tool.deptry.package_module_name_map]
mypy = "mypy"

[tool.deptry.per_rule_ignores]
DEP002 = [
  "gcsfs",
  "s3fs",
  "tap-dbf",
]
DEP004 = [
  "typing_extensions",
]

[tool.pyproject-fmt]
max_supported_python = "3.14"

[tool.pytest.ini_options]
addopts = [ "-vvv" ]

[tool.tox]
min_version = "4.22"
requires = [ "tox", "tox-uv" ]
env_list = [
  "dependencies",
  "typing",
  "3.14",
  "3.13",
  "3.12",
  "3.11",
  "3.10",
  "3.9",
]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
pip_pre = true
extras = [ "all" ]
pass_env = [ "TAP_DBF_*" ]
dependency_groups = [ "testing" ]
commands = [ [ "pytest", { replace = "posargs", default = [ "tests" ], extend = true } ] ]

[tool.tox.env.dependencies]
dependency_groups = [ "testing" ]
commands = [ [ "deptry", "." ] ]

[tool.tox.env.sync]
pip_pre = true
set_env = { TAP_DBF_PATH = "tests/data/files/contacts.dbf", TAP_DBF_IGNORE_MISSING_MEMOFILE = "true" }
commands = [ [ "tap-dbf", { replace = "posargs", default = [ "--config=ENV" ], extend = true } ] ]

[tool.tox.env.typing]
dependency_groups = [ "testing", "typing" ]
commands = [ [ "mypy", "--strict", { replace = "posargs", default = [ "tap_dbf", "tests" ], extend = true } ] ]

[tool.mypy]
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "dbfread.*",
  "fsspec.*",
]

[tool.uv]
prerelease = "allow"
preview = true
required-version = ">=0.5.19"
